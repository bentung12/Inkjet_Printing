{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green128\blue19;\red33\green33\blue33;\red167\green9\blue245;
\red14\green0\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c50196\c7451;\csgenericrgb\c12941\c12941\c12941;\csgenericrgb\c65490\c3529\c96078;
\csgenericrgb\c5490\c0\c100000;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs21 \cf2 % read the image as a matrix of positions and display the image\
\pard\pardeftab720\partightenfactor0
\cf3 \
A=imread(\cf4 'C:\\Users\\nguyh\\OneDrive\\Desktop\\ASU\\Fall 2023\\A.png'\cf3 );    \cf2 %load the picture\
\cf3 image(A), axis \cf4 image\cf3                                                 \cf2 %display the image\
\cf3 A\
\pard\pardeftab720\partightenfactor0
\cf2 % Initialize corresponding matrix for electric field values\
\pard\pardeftab720\partightenfactor0
\cf3 \
s = size(A);\
E = zeros(s(1,1),s(1,2));                               \cf2 %Field matrix equal to size of picture\
% define given quantities\
\cf3 \
L = 1;                                                  \cf2 %Distance from paper in m\
\cf3 m = 1;                                                  \cf2 %mass in kg\
\cf3 w = 1;                                                  \cf2 %width of cathode in m\
\cf3 p = 1;                                                  \cf2 %pixel length in m\
\cf3 u = 1;                                                  \cf2 %initial velocity in m/s\
\cf3 q = 1;                                                  \cf2 %Charge of the ink\
\cf3 dp = 1;                                                 \cf2 %Distance of the electric plates\
% --Electric Field Matrix--\
% For each row in each column of the positions matrix, if there is a black dot,\
% store the corresponsing electric field value with the center\
% at index 0\
% j*p is used as distance d in order to account for pixel length\
\cf3 \
\pard\pardeftab720\partightenfactor0
\cf5 for \cf3 i=1:s(1,1)\
    \cf5 for \cf3 j=1:s(1,2)\
        \cf5 if \cf3 (A(i,j) < 127.5)                             \cf2 %Checks if element is dark (with a threshold of 127.5)\
\pard\pardeftab720\partightenfactor0
\cf3             E(i,j) = (m*u^2*j*p) / ((L - w/2)*q*w);     \cf2 %Calculates corresponding electric field value needed to output distance\
\cf3         \cf5 end\
\cf3     \cf5 end\
end\
\pard\pardeftab720\partightenfactor0
\cf2 % --DC Voltage Waveform--\
% The volatge waveform takes the electric field waveform and outputs a\
% singe row vector in which 0 indicates a new line, and multiplies electric\
% field elements by distance dp in order to obtain the corresponding voltage\
\pard\pardeftab720\partightenfactor0
\cf3 \
S = sum(E,2);                                           \cf2 %Shortcut to check if a row is blank\
\cf3 t = 1;                                                  \cf2 %Keeps track of voltage waveform array size\
\cf3 V = zeros(1,1);                                         \cf2 %Initializes voltage waveform\
\pard\pardeftab720\partightenfactor0
\cf5 for \cf3 i=1:s(1,1)                                          \cf2 %Iterates through every row of the Electric Field Matrix\
\pard\pardeftab720\partightenfactor0
\cf3     \cf5 if \cf3 (S(i,1) ~= 0)                                    \cf2 %Checks if row is blank\
\cf3         \cf5 for \cf3 j=1:s(1,2)                                  \
            \cf5 if \cf3 (E(i,j) ~= 0)                            \cf2 %If not, takes any non-zero values in that row\
\cf3                 V(1,t) = E(i,j)*dp;                     \cf2 %and multiplies it by the distance to get voltage\
\cf3                 t = t+1;                                \cf2 %Increases value of t by one to let us know the increase in size\
\cf3             \cf5 end\cf3                                          \
        \cf5 end\
\cf3     \cf5 end\
\cf3     V(1,t) = 0;                                         \cf2 %The 0 lets us know its going to the next line\
\cf3     t = t+1;\
\pard\pardeftab720\partightenfactor0
\cf5 end\
\pard\pardeftab720\partightenfactor0
\cf2 % --Image output--\
% Converting the voltage waveform into an output onto a 2-D coordinate\
% system, the output is two rows: the first is the x values and the second\
% is the y values. \
% The code iterates from the top down, if the value of the initial DC waveform vector is a 0, the y axis is\
% decremented by 1\
\pard\pardeftab720\partightenfactor0
\cf3 \
VoltageSize = size(V);\
VoltageSize = VoltageSize(1,2);                                \cf2 %Gives us amount of columns in the voltage waveform                      \
\cf3 Output = zeros(2,VoltageSize);                                 \cf2 %Output contains two rows, first row the x position and second row y position.\
\cf3 y = s(1,1);                                                    \cf2 %Will contain a coordinate value for every value in Voltage Waveform\
\pard\pardeftab720\partightenfactor0
\cf5 for \cf3 i=1:VoltageSize                                            \cf2 %Iterates through array\
\pard\pardeftab720\partightenfactor0
\cf3     \cf5 if \cf3 (V(1,i) == 0)                                           \cf2 %If Voltage value is zero, that signifies the next line\
\cf3         Output(1,i) = 0;                                       \cf2 %Sets X and Y to zero\
\cf3         Output(2,i) = 0;\
        y = y-1;                                               \cf2 %Decrease the value of y to go to next line\
\cf3     \cf5 else\
\cf3         Output(1,i) = (V(1,i)/dp)*q*w*(L-w/2) / (u^2*m*p);     \cf2 %If not 0, solves for x value using the deflection equation\
\cf3         Output(2,i) = y;                                       \cf2 %Sets y value to line number\
\cf3     \cf5 end\
end\
\cf3 Output\
\pard\pardeftab720\partightenfactor0
\cf2 % --DC Waveform, static output--\
% Outputs Voltage vs Time plot for the DC Waveform as a stair plot\
\pard\pardeftab720\partightenfactor0
\cf3 x = 1:1:VoltageSize;\
stairs(x,V)\
title(\cf4 'DC Waveform'\cf3 )\
xlabel(\cf4 'Time (s)'\cf3 );\
ylabel(\cf4 'Voltage (V)'\cf3 );\
\
\pard\pardeftab720\partightenfactor0
\cf2 % --Image Output, static output--\
% Outputs the corresponding image to the DC waveform above on a 2-D\
% coordinate system as a scatter plot\
\pard\pardeftab720\partightenfactor0
\cf3 X = Output(1,:);\
Y = Output(2,:);\
scatter(X,Y, 36, \cf4 'k'\cf3 , \cf4 'square'\cf3 , \cf4 'filled'\cf3 )\
axis \cf4 square\cf3 ;\
title(\cf4 'Output'\cf3 );\
\pard\pardeftab720\partightenfactor0
\cf2 % --gif output--\
% Creates two tiles, one for the DC waveform and one for the image output.\
% For each voltage waveform value, a point is placed and animated in each\
% tile. The DC waveform is a stair plot, the image output is a scatter\
% plot. The gif is saves as 'DCWaveform.gif'\
\pard\pardeftab720\partightenfactor0
\cf3 tiledlayout(2,1)\
\pard\pardeftab720\partightenfactor0
\cf5 for \cf3 n = 1:VoltageSize\
   nexttile(1)\
   stairs(x(1:n),V(1:n));\
   title(\cf4 'DC Waveform'\cf3 )\
   xlabel(\cf4 'Time (s)'\cf3 );\
   ylabel(\cf4 'Voltage (V)'\cf3 );\
\
   nexttile(2)\
   scatter(X(1:n),Y(1:n), 36, \cf4 'k'\cf3 , \cf4 'square'\cf3 , \cf4 'filled'\cf3 );\
   axis \cf4 square\cf3 ;\
   title(\cf4 'Output'\cf3 );\
   exportgraphics(gcf,\cf4 'DCWaveform (G).gif'\cf3 ,\cf4 'Append'\cf3 ,true);\
\cf5 end\
}